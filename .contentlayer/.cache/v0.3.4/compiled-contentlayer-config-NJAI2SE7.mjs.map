{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport remarkGfm from 'remark-gfm'\nimport rehypeSlug from 'rehype-slug'\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  // You can keep .mdx extension if you like; we'll parse as Markdown, not MDX runtime\n  filePathPattern: `**/*.mdx`,\n  contentType: 'markdown',\n  fields: {\n    title: { type: 'string', required: true },\n    description: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    updated: { type: 'date' },\n    slug: { type: 'string', required: true },\n  },\n  computedFields: {\n    url: { type: 'string', resolve: (p) => `/blog/${p.slug}` },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: 'content/posts',\n  documentTypes: [Post],\n  // Use the markdown pipeline (not mdx) to output HTML we can render on the server\n  markdown: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [rehypeSlug, rehypeAutolinkHeadings],\n  },\n  // Optional: silence the alias warning\n  disableImportAliasWarning: true,\n})\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AAE5B,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA;AAAA,EAEN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,SAAS,EAAE,MAAM,OAAO;AAAA,IACxB,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACzC;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK,EAAE,MAAM,UAAU,SAAS,CAAC,MAAM,SAAS,EAAE,IAAI,GAAG;AAAA,EAC3D;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA;AAAA,EAEpB,UAAU;AAAA,IACR,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe,CAAC,YAAY,sBAAsB;AAAA,EACpD;AAAA;AAAA,EAEA,2BAA2B;AAC7B,CAAC;",
  "names": []
}
